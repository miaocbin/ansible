http://bbotte.com/server-config/use-ansible-playbook-to-install-rabbitmq-cluster/

---
  - hosts: server
    remote_user: root
    vars:
      hostname: '[% host_name %]'
    tasks:
    - name: time sync
      command: ntpdate ntp1.aliyun.com
    - name: copy hosts file
      copy: src=/root/ansible/hosts dest=/etc/hosts owner=root group=root mode=0644 force='yes'
    - name: set hostname
      shell: 'hostname {{host_name}}'
      register: host_name_change
    - debug: msg='{{host_name_change.stdout}}'
    - name: close iptables
      service: name=iptables enabled=yes state=stopped
    - name: copy rabbitmq rpm
      copy: src=/root/rabbitmq-server-3.5.6-1.noarch.rpm dest=/tmp/  owner=root group=root mode=0644
    - name: yum erlang
      yum: name=erlang state=present
    - name: install rabbitmq.rpm
      yum: name=/tmp/rabbitmq-server-3.5.6-1.noarch.rpm state=present
    - name: mkdir /var/lib/rabbitmq
      shell: mkdir -p /var/lib/rabbitmq
    - name: create .erlang.cookie
      shell: echo PKPNUVGNFXZXIQYKLTTG > /var/lib/rabbitmq/.erlang.cookie
    - name: change .erlang.cookie attribute
      shell: chown rabbitmq.rabbitmq /var/lib/rabbitmq/.erlang.cookie; chmod 0400 /var/lib/rabbitmq/.erlang.cookie
    - name: copy erlang.cookie
      copy: src=/var/lib/rabbitmq/.erlang.cookie dest=/var/lib/rabbitmq/ owner=rabbitmq group=rabbitmq mode=0400
    - name: kill rabbitmq
      shell: rabbitmqctl stop; ps aux|grep rabbitmq|grep -v grep|awk '{print $2}'|xargs kill -9; rabbitmq-server -detached
    - name: start rabbitmq
      service: name=rabbitmq-server enabled=yes state=restarted
    - name: rabbitmq status
      shell: rabbitmqctl cluster_status
      register: result
    - debug: msg='{{result.stdout}}'
    - name: config rabbit cluster node 1
      shell: rabbitmqctl stop_app ;rabbitmqctl join_cluster --ram rabbit@vm01 ;rabbitmqctl start_app
      when: ansible_hostname == "vm02"
    - name: config rabbit cluster node 2
      shell: rabbitmqctl stop_app ;rabbitmqctl join_cluster --ram rabbit@vm01 ;rabbitmqctl start_app
      when: ansible_hostname == "vm03"
    - name: rabbitmq cluster status
      shell: rabbitmqctl cluster_status
      register: rabbit_cluster_status
    - debug: msg='{{rabbit_cluster_status.stdout}}'

集群安装命令：
mq136:  
cat >>/home/rabbitmq/scripts/cluster.sh<<EOF 
rabbitmqctl stop_app 
rabbitmqctl reset 
rabbitmqctl cluster 
rabbitmqctl start_app 
EOF 
 
mq137: 
cat >>/home/rabbitmq/scripts/cluster.sh<<EOF 
rabbitmqctl stop_app 
rabbitmqctl reset 
rabbitmqctl cluster rabbit@mq136 
rabbitmqctl start_app 
EOF 
 
mq138: 
cat >>/home/rabbitmq/scripts/cluster.sh<<EOF 
rabbitmqctl stop_app 
rabbitmqctl reset 
rabbitmqctl cluster rabbit@mq136 
rabbitmqctl start_app 
EOF 